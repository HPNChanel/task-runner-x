[tool.poetry]
name = "taskrunnerx"
version = "0.1.0"
description = "Redis Streams + FastAPI + MySQL task runner"
authors = ["TaskrunnerX Maintainers <devnull@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "taskrunnerx" }]

[tool.poetry.dependencies]
python = ">=3.10"
fastapi = "0.116.2"
uvicorn = "0.30.6"
pydantic = "2.11.10"
pydantic-settings = "2.11.0"
SQLAlchemy = "2.0.43"
pymysql = "1.1.2"
redis = "5.3.1"
apscheduler = "3.11.0"
python-dotenv = "1.1.1"
requests = "2.32.5"

[tool.poetry.group.dev.dependencies]
black = "24.10.0"
ruff = "0.7.2"
isort = "5.13.2"
mypy = "1.13.0"
pre-commit = "4.0.1"

[tool.black]
line-length = 100
target-version = ["py311"]
preview = true

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.format]
quote-style = "double"
line-ending = "lf"

[tool.ruff.lint]
select = [
    "A",
    "ASYNC",
    "B",
    "C4",
    "DTZ",
    "E",
    "F",
    "N",
    "PIE",
    "PL",
    "PT",
    "RET",
    "RUF",
    "SIM",
    "TRY",
    "UP",
]
ignore = [
    "PLR2004", # Allow magic values in conditionals when pragmatic.
]

[tool.ruff.lint.per-file-ignores]
"taskrunnerx/app/main.py" = ["TRY003"]

[tool.ruff.lint.isort]
order-by-type = false

[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true
known_first_party = ["taskrunnerx"]
force_sort_within_sections = true
order_by_type = false

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = true
warn_unused_configs = true
implicit_reexport = false
exclude = ["tests/?.*", "taskrunnerx/scripts/?.*"]

[[tool.mypy.overrides]]
module = ["apscheduler.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"
